#!/usr/bin/env bash

program_root=$(readlink -f $(dirname $0))
cd $program_root

source core.sh
source .env
source db.sh
source file.sh
source encryption.sh
source rsync.sh
source logging.sh

data_dir=$program_root/var/data
current_date=$(date +%Y%m%d-%H%M)

show_help() {
	# colors
	local c_red=$(printf '\033[1;31m')
	local c_green=$(printf '\033[1;32m')
	local c_reset=$(printf '\033[0m')

	cat <<-USAGE
	Available options:

	  ${c_green}--mysql${c_reset}           - dump all MySQL databases
	  ${c_green}--pg${c_reset}              - dump all postgres databases
	  ${c_green}--files${c_reset}           - backup files/directories from each line in ${c_red}files.conf${c_reset}
	  ${c_green}--clear-logs${c_reset}      - clear ${c_red}all${c_reset} logs and monitoring checks

	  ${c_green}--encrypt${c_reset}
	  ${c_green}--enable-encrypt${c_reset}  - encrypt all created archives (enabled by default)
	  ${c_green}--disable-encrypt${c_reset} - disable encryption of archives

	  ${c_green}--rsync${c_reset}
	  ${c_green}--enable-rsync${c_reset}    - rsync databases with the ${c_red}remote storages${c_reset}
	  ${c_green}--disable-rsync${c_reset}   - disable rsync (disabled by default)

USAGE
	exit 1
}

enable_encrypt=true
enable_rsync=false

for arg in "$@"; do
case "$arg" in
	--encrypt|--enable-encrypt)
		enable_encrypt=true
	;;
	--disable-encrypt)
		enable_encrypt=false
	;;
	--rsync|--enable-rsync)
		enable_rsync=true
	;;
	--disable-rsync)
		enable_rsync=false
	;;
esac
done

for arg in "$@"; do
case "$arg" in
	--mysql|mysql)
		dump_mysql_databases "$data_dir"
		$enable_encrypt && encrypt_files "$data_dir"/*/*.gz
		rotate_backups "$data_dir"
	;;
	--pg|pg)
		dump_pg_databases "$data_dir"
		$enable_encrypt && encrypt_files "$data_dir"/*/*.gz
		rotate_backups "$data_dir"
	;;
	--files|files)
		files_data_dir=$data_dir/files
		if backup_extra_files "$program_root/files.conf" "$files_data_dir"; then
			$enable_encrypt && encrypt_files "$files_data_dir"/*.tgz
			rotate_backup "$files_data_dir"
		fi
	;;
	--clear-logs|clear-logs)
		vivian_clear_logs
	;;
	*)
		show_help
esac
done

$enable_rsync && rsync_to_storages "$data_dir" "${remote_storages[@]}"

if [[ -z "$1" ]]; then
	show_help
fi
